{"ast":null,"code":"// redux/propertySlice.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Fetch all properties\n// export const fetchProperties = createAsyncThunk(\n//   \"properties/fetchProperties\",\n//   async (filters) => {\n//     const response = await axios.get(\"http://localhost:5000/api/properties\");\n//     return response.data;\n//   }\n// );\nexport const fetchProperties = createAsyncThunk(\"properties/fetch\", async filters => {\n  const response = await axios.get(\"http://localhost:5000/api/properties\", {\n    params: filters\n  });\n  return response.data;\n});\n\n// Delete a property\nexport const deleteProperty = createAsyncThunk(\"properties/deleteProperty\", async id => {\n  await axios.delete(`http://localhost:5000/api/properties/${id}`);\n  return id;\n});\nconst propertySlice = createSlice({\n  name: \"properties\",\n  initialState: {\n    list: [],\n    status: null\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProperties.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchProperties.fulfilled, (state, action) => {\n      state.list = action.payload;\n      state.status = \"success\";\n    }).addCase(fetchProperties.rejected, state => {\n      state.status = \"failed\";\n    }).addCase(deleteProperty.fulfilled, (state, action) => {\n      // Filter out the deleted property from the state list\n      state.list = state.list.filter(property => property._id !== action.payload);\n    });\n  }\n});\nexport default propertySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchProperties","filters","response","get","params","data","deleteProperty","id","delete","propertySlice","name","initialState","list","status","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","filter","property","_id","reducer"],"sources":["C:/Users/Hp/OneDrive/Desktop/auth-mern-app/frontend/src/redux/propertySlice.js"],"sourcesContent":["// redux/propertySlice.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Fetch all properties\n// export const fetchProperties = createAsyncThunk(\n//   \"properties/fetchProperties\",\n//   async (filters) => {\n//     const response = await axios.get(\"http://localhost:5000/api/properties\");\n//     return response.data;\n//   }\n// );\nexport const fetchProperties = createAsyncThunk(\n  \"properties/fetch\",\n  async (filters) => {\n    const response = await axios.get(\"http://localhost:5000/api/properties\", {\n      params: filters,\n    });\n    return response.data;\n  }\n);\n\n// Delete a property\nexport const deleteProperty = createAsyncThunk(\n  \"properties/deleteProperty\",\n  async (id) => {\n    await axios.delete(`http://localhost:5000/api/properties/${id}`);\n    return id;\n  }\n);\n\nconst propertySlice = createSlice({\n  name: \"properties\",\n  initialState: {\n    list: [],\n    status: null,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProperties.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchProperties.fulfilled, (state, action) => {\n        state.list = action.payload;\n        state.status = \"success\";\n      })\n      .addCase(fetchProperties.rejected, (state) => {\n        state.status = \"failed\";\n      })\n      .addCase(deleteProperty.fulfilled, (state, action) => {\n        // Filter out the deleted property from the state list\n        state.list = state.list.filter(\n          (property) => property._id !== action.payload\n        );\n      });\n  },\n});\n\nexport default propertySlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAC7C,kBAAkB,EAClB,MAAOG,OAAO,IAAK;EACjB,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,sCAAsC,EAAE;IACvEC,MAAM,EAAEH;EACV,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACG,IAAI;AACtB,CACF,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGR,gBAAgB,CAC5C,2BAA2B,EAC3B,MAAOS,EAAE,IAAK;EACZ,MAAMR,KAAK,CAACS,MAAM,CAAC,wCAAwCD,EAAE,EAAE,CAAC;EAChE,OAAOA,EAAE;AACX,CACF,CAAC;AAED,MAAME,aAAa,GAAGZ,WAAW,CAAC;EAChCa,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAChB,eAAe,CAACiB,OAAO,EAAGC,KAAK,IAAK;MAC3CA,KAAK,CAACL,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDG,OAAO,CAAChB,eAAe,CAACmB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACN,IAAI,GAAGQ,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAACL,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDG,OAAO,CAAChB,eAAe,CAACsB,QAAQ,EAAGJ,KAAK,IAAK;MAC5CA,KAAK,CAACL,MAAM,GAAG,QAAQ;IACzB,CAAC,CAAC,CACDG,OAAO,CAACV,cAAc,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpD;MACAF,KAAK,CAACN,IAAI,GAAGM,KAAK,CAACN,IAAI,CAACW,MAAM,CAC3BC,QAAQ,IAAKA,QAAQ,CAACC,GAAG,KAAKL,MAAM,CAACC,OACxC,CAAC;IACH,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,aAAa,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}