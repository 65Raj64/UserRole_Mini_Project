{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\auth-mern-app\\\\frontend\\\\src\\\\pages\\\\AddRole.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { Form, Button } from \"react-bootstrap\";\n// import axios from \"axios\";\n\n// const AddProperty = () => {\n//   const navigate = useNavigate();\n\n//   // Only include 'name' in the formData\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//   });\n\n//   const [error, setError] = useState(\"\");\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       // Send only the 'name' field\n//       const response = await axios.post(\n//         \"http://localhost:8080/auth/add-role\",\n//         { name: formData.name }, // Sending just the name\n//         {\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//         }\n//       );\n\n//       setSuccessMessage(\"Role added successfully!\");\n\n//       // Clear the form after successful submission\n//       setFormData({ name: \"\" });\n//       setTimeout(() => setSuccessMessage(\"\"), 3000); // Clear message after 3 seconds\n//     } catch (error) {\n//       setError(\"Error uploading Role\");\n//       console.error(\"Error uploading Role\", error);\n//     }\n//   };\n\n//   const handleBackClick = () => {\n//     navigate(\"/home\"); // Navigate to home page\n//   };\n\n//   return (\n//     <div>\n//       <Button\n//         variant=\"secondary\"\n//         onClick={handleBackClick}\n//         style={{ marginBottom: \"20px\" }}\n//       >\n//         Back\n//       </Button>\n//       <Form onSubmit={handleSubmit}>\n//         <Form.Group>\n//           <Form.Label>Role</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             value={formData.name}\n//             onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n//             required\n//             className=\"form-control-sm\"\n//             style={{ width: \"50%\" }}\n//           />\n//         </Form.Group>\n\n//         <Button\n//           type=\"submit\"\n//           style={{\n//             marginTop: \"10px\",\n//           }}\n//         >\n//           Save\n//         </Button>\n\n//         {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n//         {successMessage && (\n//           <div className=\"alert alert-success mt-3\">{successMessage}</div>\n//         )}\n//       </Form>\n//     </div>\n//   );\n// };\n\n// export default AddProperty;\n\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRolePage = () => {\n  _s();\n  const [roleName, setRoleName] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSave = async () => {\n    if (roleName.trim()) {\n      try {\n        // Send the role name to the API\n        await axios.post(\"http://localhost:8080/auth/add-role\", {\n          name: roleName\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        // Show success message and clear the input\n        setSuccessMessage(`Role \"${roleName}\" saved successfully!`);\n        setRoleName(\"\");\n        setTimeout(() => setSuccessMessage(\"\"), 3000); // Clear message after 3 seconds\n      } catch (error) {\n        console.error(\"Error saving role:\", error);\n        setErrorMessage(\"Failed to save the role. Please try again.\");\n        setTimeout(() => setErrorMessage(\"\"), 3000); // Clear error after 3 seconds\n      }\n    } else {\n      alert(\"Role Name is required!\");\n    }\n  };\n  const handleCancel = () => {\n    setRoleName(\"\"); // Clear the role name input\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-role-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"add-role-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"roleName\",\n        className: \"form-label\",\n        children: \"Role Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"roleName\",\n        className: \"form-input\",\n        value: roleName,\n        onChange: e => setRoleName(e.target.value),\n        placeholder: \"Enter role name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success mt-3\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(AddRolePage, \"62nbvvtW7VZHLUE3kUBPSGocrvU=\");\n_c = AddRolePage;\nexport default AddRolePage;\nvar _c;\n$RefreshReg$(_c, \"AddRolePage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddRolePage","_s","roleName","setRoleName","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleSave","trim","post","name","headers","setTimeout","error","console","alert","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/auth-mern-app/frontend/src/pages/AddRole.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { Form, Button } from \"react-bootstrap\";\r\n// import axios from \"axios\";\r\n\r\n// const AddProperty = () => {\r\n//   const navigate = useNavigate();\r\n\r\n//   // Only include 'name' in the formData\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//   });\r\n\r\n//   const [error, setError] = useState(\"\");\r\n//   const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       // Send only the 'name' field\r\n//       const response = await axios.post(\r\n//         \"http://localhost:8080/auth/add-role\",\r\n//         { name: formData.name }, // Sending just the name\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       setSuccessMessage(\"Role added successfully!\");\r\n\r\n//       // Clear the form after successful submission\r\n//       setFormData({ name: \"\" });\r\n//       setTimeout(() => setSuccessMessage(\"\"), 3000); // Clear message after 3 seconds\r\n//     } catch (error) {\r\n//       setError(\"Error uploading Role\");\r\n//       console.error(\"Error uploading Role\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleBackClick = () => {\r\n//     navigate(\"/home\"); // Navigate to home page\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Button\r\n//         variant=\"secondary\"\r\n//         onClick={handleBackClick}\r\n//         style={{ marginBottom: \"20px\" }}\r\n//       >\r\n//         Back\r\n//       </Button>\r\n//       <Form onSubmit={handleSubmit}>\r\n//         <Form.Group>\r\n//           <Form.Label>Role</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             value={formData.name}\r\n//             onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n//             required\r\n//             className=\"form-control-sm\"\r\n//             style={{ width: \"50%\" }}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Button\r\n//           type=\"submit\"\r\n//           style={{\r\n//             marginTop: \"10px\",\r\n//           }}\r\n//         >\r\n//           Save\r\n//         </Button>\r\n\r\n//         {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\r\n//         {successMessage && (\r\n//           <div className=\"alert alert-success mt-3\">{successMessage}</div>\r\n//         )}\r\n//       </Form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddProperty;\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport axios from \"axios\";\r\n\r\nconst AddRolePage = () => {\r\n  const [roleName, setRoleName] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSave = async () => {\r\n    if (roleName.trim()) {\r\n      try {\r\n        // Send the role name to the API\r\n        await axios.post(\r\n          \"http://localhost:8080/auth/add-role\",\r\n          { name: roleName },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        // Show success message and clear the input\r\n        setSuccessMessage(`Role \"${roleName}\" saved successfully!`);\r\n        setRoleName(\"\");\r\n        setTimeout(() => setSuccessMessage(\"\"), 3000); // Clear message after 3 seconds\r\n      } catch (error) {\r\n        console.error(\"Error saving role:\", error);\r\n        setErrorMessage(\"Failed to save the role. Please try again.\");\r\n        setTimeout(() => setErrorMessage(\"\"), 3000); // Clear error after 3 seconds\r\n      }\r\n    } else {\r\n      alert(\"Role Name is required!\");\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setRoleName(\"\"); // Clear the role name input\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-role-container\">\r\n      <header className=\"add-role-header\">\r\n        <h2>Add Role</h2>\r\n      </header>\r\n      <div className=\"form-container\">\r\n        <label htmlFor=\"roleName\" className=\"form-label\">\r\n          Role Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"roleName\"\r\n          className=\"form-input\"\r\n          value={roleName}\r\n          onChange={(e) => setRoleName(e.target.value)}\r\n          placeholder=\"Enter role name\"\r\n        />\r\n        <div className=\"form-buttons\">\r\n          <button className=\"cancel-btn\" onClick={handleCancel}>\r\n            Cancel\r\n          </button>\r\n          <button className=\"save-btn\" onClick={handleSave}>\r\n            Save\r\n          </button>\r\n        </div>\r\n        {successMessage && (\r\n          <div className=\"alert alert-success mt-3\">{successMessage}</div>\r\n        )}\r\n        {errorMessage && (\r\n          <div className=\"alert alert-danger mt-3\">{errorMessage}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRolePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}