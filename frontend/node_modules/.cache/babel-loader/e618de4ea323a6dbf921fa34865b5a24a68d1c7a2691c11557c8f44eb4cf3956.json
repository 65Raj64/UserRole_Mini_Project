{"ast":null,"code":"// redux/propertySlice.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// export const fetchProperties = createAsyncThunk(\n//   \"properties/fetch\",\n//   async (filters) => {\n//     const response = await axios.get(\"http://localhost:5000/api/properties\", {\n//       params: filters,\n//     });\n//     return response.data;\n//   }\n// );\n\n// Delete a property\nexport const deleteProperty = createAsyncThunk(\"properties/deleteProperty\", async id => {\n  await axios.delete(`http://localhost:5000/api/properties/${id}`);\n  return id;\n});\n\n// const propertySlice = createSlice({\n//   name: \"properties\",\n//   initialState: {\n//     list: [],\n//     status: null,\n//   },\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(fetchProperties.pending, (state) => {\n//         state.status = \"loading\";\n//       })\n//       .addCase(fetchProperties.fulfilled, (state, action) => {\n//         state.list = action.payload;\n//         state.status = \"success\";\n//       })\n//       .addCase(fetchProperties.rejected, (state) => {\n//         state.status = \"failed\";\n//       })\n//       .addCase(deleteProperty.fulfilled, (state, action) => {\n//         // Filter out the deleted property from the state list\n//         state.list = state.list.filter(\n//           (property) => property._id !== action.payload\n//         );\n//       });\n//   },\n// });\n\nexport default propertySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","deleteProperty","id","delete","propertySlice","reducer"],"sources":["C:/Users/Hp/OneDrive/Desktop/auth-mern-app/frontend/src/redux/propertySlice.js"],"sourcesContent":["// redux/propertySlice.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// export const fetchProperties = createAsyncThunk(\n//   \"properties/fetch\",\n//   async (filters) => {\n//     const response = await axios.get(\"http://localhost:5000/api/properties\", {\n//       params: filters,\n//     });\n//     return response.data;\n//   }\n// );\n\n// Delete a property\nexport const deleteProperty = createAsyncThunk(\n  \"properties/deleteProperty\",\n  async (id) => {\n    await axios.delete(`http://localhost:5000/api/properties/${id}`);\n    return id;\n  }\n);\n\n// const propertySlice = createSlice({\n//   name: \"properties\",\n//   initialState: {\n//     list: [],\n//     status: null,\n//   },\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(fetchProperties.pending, (state) => {\n//         state.status = \"loading\";\n//       })\n//       .addCase(fetchProperties.fulfilled, (state, action) => {\n//         state.list = action.payload;\n//         state.status = \"success\";\n//       })\n//       .addCase(fetchProperties.rejected, (state) => {\n//         state.status = \"failed\";\n//       })\n//       .addCase(deleteProperty.fulfilled, (state, action) => {\n//         // Filter out the deleted property from the state list\n//         state.list = state.list.filter(\n//           (property) => property._id !== action.payload\n//         );\n//       });\n//   },\n// });\n\nexport default propertySlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAC5C,2BAA2B,EAC3B,MAAOG,EAAE,IAAK;EACZ,MAAMF,KAAK,CAACG,MAAM,CAAC,wCAAwCD,EAAE,EAAE,CAAC;EAChE,OAAOA,EAAE;AACX,CACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeE,aAAa,CAACC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}